scalar DateTime

enum BsdasriRole {
  "Les Bsdasri dont je suis transporteur"
  TRANSPORTER
  "Les Bsdasri dont je suis la destination de traitement"
  RECIPIENT
  "Les Bsdasri dont je suis l'émetteur"
  EMITTER
}

enum BsdasriStatus {
  "Bsdasri à l'état de brouillon"
  DRAFT

  "Bsdasri scellé (publié)"
  SEALED

  "Optionnel, Bsdasri signé par la PRED (émetteur)"
  READY_FOR_TAKEOVER

  "Bsdasri envoyé vers l'établissement de destination"
  SENT

  "Bsdasri reçu par l'établissement de destination"
  RECEIVED

  "Bsdasri dont les déchets ont été traités"
  PROCESSED

  "Déchet refusé"
  REFUSED
}

 

"Type de packaging du déchet"
enum BsdasriPackagings {
  "Caisse en carton avec sac en plastique"
  BOITE_CARTON

  "Fûts ou jerrican à usage unique"
  FUT

  "Boîtes et Mini-collecteurs pour déchets perforants"
  BOITE_PERFORANTS

  "Grand emballage"
  GRAND_EMBALLAGE

  "Grand récipient pour vrac"
  VRAC

  "Autre"
  AUTRE
}

"Émetteur du Bsdasri, Personne responsable de l'émimination des déchets (PRED)"
type BsdasriEmitter {
  "Établissement émetteur"
  company: FormCompany
  "Site d'emport du déceht, si différent de celle de l'émetteur"
  workSite: WorkSite
  "Date de remise au tranporteur"
  handOverToTransporterAt: DateTime
  "Champ libre"
  customInfo: String
}

"Destinataire du Bsdasri"
type BsdasriRecipient {
  """
  Installation destinataire
  """
  company: FormCompany

  "Champ libre"
  customInfo: String
}

"""
Collecteur transporteur
"""
type BsdasriTransporter {
  "Établissement de destination"
  company: FormCompany

  "N° de récipissé"
  receipt: String

  "Département"
  receiptDepartment: String

  "Limite de validité du récipissé"
  receiptValidityLimit: DateTime

  "Champ libre"
  customInfo: String
}

"Informations sur le conditionnement Bsdasri"
type BsdasriPackagingInfo {
  "Type de conditionnement"
  type: BsdasriPackagings!

  "Description du conditionnement dans le cas où le type de conditionnement est `AUTRE`"
  other: String

  "Nombre de colis associés à ce conditionnement"
  quantity: Int!

  volume: Int!
}
"Détail sur le déchet proprement dit du Bsdasri"
type BsdasriWasteDetails {
  quantity: Int
  quantityType: QuantityType
  volume: Int
  packagingInfos: [BsdasriPackagingInfo!]
  onuCode: String
}

"Informations relatives au déchet émis"
type BsdasriEmission {
  wasteCode: String
  wasteDetails: BsdasriWasteDetails
  handedOverAt: DateTime
  signedBy: String
  signedAt: DateTime
}

"Informations relatives à l'acceptation ou au refus du déchet (Bsdasri)"
type BsdasriWasteAcceptation {
  status: String
  refusalReason: String
  refusedQuantity: Int
}

"Informations relatives au transport du Bsdasri"
type BsdasriTransport {
  wasteDetails: BsdasriWasteDetails
  wasteAcceptation: BsdasriWasteAcceptation
  handedOverAt: DateTime
  takenOverAt: DateTime
  signedBy: String
  signedAt: DateTime
}

"Informations relatives à la réception du Bsdasri"
type BsdasriReception {
  wasteDetails: BsdasriWasteDetails
  wasteAcceptation: BsdasriWasteAcceptation
  receivedAt: DateTime
  signedBy: String
  signedAt: DateTime
}

"Informations relatives au traitement du Bsdasri"
type BsdasriOperation {
  signedBy: String
  signedAt: DateTime
  processingOperation: String
  processedAt: DateTime
}

"Bordereau Bsdasri"
type Bsdasri {
  id: ID!
  readableId: String!
  customId: String
  status: BsdasriStatus!
  createdAt: DateTime
  updatedAt: DateTime

  emitter: BsdasriEmitter
  emission: BsdasriEmission

  transporter: BsdasriTransporter
  transport: BsdasriTransport

  recipient: BsdasriRecipient
  reception: BsdasriReception
  operation: BsdasriOperation

  "Bordereaux regroupés"
  regroupedBsdasris: [Bsdasri!]
}

type Query {
  """
  Renvoie les Bsdasri de l'établissement sélectionné.
  Si aucun SIRET n'est précisé et que l'utilisateur est membre d'une seule entreprise
  alors les Bsdasri de cette entreprise sont retournés.
  Si l'utilisateur est membre de 2 entreprises ou plus, vous devez obligatoirement
  préciser un SIRET
  Si l'utilisateur n'est membre d'aucune entreprise, un tableau vide sera renvoyé

  Vous pouvez filtrer:
  - par rôle que joue votre entreprise sur le Bsdasri via `role`
  - par date de dernière modification via `updatedAfter`
  - par date d'envoi via `sentAfter`
  - par statut du Bsdasri via `status`
  - par code déchet via `wasteCode`
  - par SIRET d'une entreprise présente n'importe où sur le bordereau via `siretPresentOnForm`

  Par défaut:
  - tous les BSD accessibles sont retournés
  - les BSD sont classés par date de création, de la plus récente à la plus vieille
  - les résultats sont paginés par 50. Il est possible de modifier cette valeur via `first` ou `last` en fonction du curseur utilisé
  - pour afficher la suite des résultats, utiliser `cursorAfter` ou `cursorBefore`
  """
  bsdasris(
    "SIRET d'un établissement dont je suis membre"
    siret: String

    """
    (Optionnel) PAGINATION
    Permet en conjonction avec `first` de paginer "en avant"
    (des Bsdasri les plus récents aux Bsdasri les plus anciens)
    Curseur après lequel les Bsdasri doivent être retournés
    Attend un identifiant (propriété `id`) de BSD
    Défaut à vide, pour retourner les Bsdasri les plus récents
    Le BSD précisé dans le curseur ne fait pas partie du résultat
    """
    after: ID
    """
    (Optionnel) PAGINATION
    Permet en conjonction avec `after` de paginer "en avant"
    (des Bsdasri les plus récents aux Bsdasri les plus anciens)
    Nombre de Bsdasri retournés après le `cursorAfter`
    Défaut à 50, maximum à 500
    """
    first: Int

    """
    (Optionnel) PAGINATION
    Permet en conjonction avec `last` de paginer "en arrière"
    (des Bsdasri les plus anciens aux Bsdasris les plus récents)
    Curseur avant lequel les Bsdasri doivent être retournés
    Attend un identifiant (propriété `id`) de BSD
    Défaut à vide, pour retourner les Bsdasri les plus anciens
    Le BSD précisé dans le curseur ne fait pas partie du résultat
    """
    before: ID

    """
    (Optionnel) PAGINATION
    Nombre de Bsdasri retournés avant le `before`
    Défaut à 50, maximum à 500
    """
    last: Int

    """
    (Optionnel) Retourne les Bsdasri modifiés après la date
    Filtre sur la date de dernière modification
    Au format (YYYY-MM-DD)
    Par défaut vide, aucun filtre n'est appliqué
    """
    updatedAfter: String

    """
    (Optionnel) Filtre sur les statuts des Bsdasri
    Si aucun filtre n'est passé, les Bsdasri seront retournés quel que soit leur statut
    Défaut à vide.
    """
    status: [BsdasriStatus!]

    """
    (Optionnel) Siret d'une autre entreprise présente sur le Bsdasri
    Vous n'avez pas besoin d'être membre de cette entreprise.
    Seuls les Bsdasri où cette entreprise apparait (dans n'importe quel cadre) seront retournés.
    Défaut à vide.
    """
    siretPresentOnForm: String

    """
    (Optionnel) Code déchet pour affiner la recherche
    18 01 03* (DASRI d'origine humaine) ou 18 02 02* (DASRI d'origine animale)
    Défaut à vide.
    """
    wasteCode: String

    """
    (Optionnel) Filtre sur le role de demandeur dans le dasri
    Par exemple:
     - `roles: [TRANSPORTER]` renverra les Bsdasri pour lesquels je suis transporteur
     - `roles: [EMITTER, RECIPIENT]` renverra les Bsdasri dont je suis l'émetteur ou le destinataire final
    Voir `DasriRole` pour la liste des roles sur lesquels il est possible de filtrer.
    Si aucune filtre n'est passé, les Bsdasri seront retournés quel que soit votre role dessus.
    Défaut à vide.
    """
    roles: [BsdasriRole!]

    """
    (Optionnel) Permet de filtrer sur les dasris en attente d'une action de votre part
    Si `true`, seul les dasris attendant une action sont renvoyés
    Si `false`, seul les dasris n'attendant aucune action son renvoyés
    Si vide, tous les dasris sont renvoyés
    Défaut à vide.
    """
    hasNextStep: Boolean
  ): [Bsdasri!]!

  bsdasri(
    "Identifiant opaque du BSD"
    id: ID
    "Identifiant lisible du BSD"
    readableId: String
  ): Bsdasri
}

type Mutation {
  "Crée un nouveau dasri"
  createBsdasri(
    "Payload de création d'un dasri"
    bsdasriCreateInput: BsdasriCreateInput!
  ): Bsdasri!

  """
  Met à jour un dasri existant
  Par défaut, tous les champs sont modifiables.
  """
  updateBsdasri(
    "Payload de mise à jour d'un dasri"
    bsdasriUpdateInput: BsdasriUpdateInput!
  ): Bsdasri!

  "Marque un dasri brouillon comme prêt (SEALED)"
  markAsReadyBsdasri("ID d'un Bsdasri" id: ID!): Bsdasri

  """
  Appose une signature sur un Bsdasri, verrouille les cadres correspondant
  
  Une signature ne peut être apposée que par un membre de l'entreprise figurant sur le cadre concerné
  Ex: la signature TRANSPORT ne peut être apposée que par un membre de l'entreprise de transport

  Toutefois il existe un exception: le cadre emetteur peut être signé par le transporteur grâce au code de 
  sécurité de l'émetteur (BsdasriSignatureType: EMISSION_WITH_SECRET_CODE)
  """ 

  
  signBsdasri(id: ID!, signatureInput: BsdasriSignatureInput! ): Bsdasri
}
